#!/bin/bash

# Set the Jamf Pro API credentials and server URL
jamfProURL="xxx"
username="xxx"
password="xxx"

# Set the computer's serial number
COMPUTER_SERIAL="xxx"

# Request auth token
authToken=$( /usr/bin/curl \
--request POST \
--silent \
--url "$jamfProURL/api/v1/auth/token" \
--user "$username:$password" )

# Parse auth token
token=$( /usr/bin/plutil \
-extract token raw - <<< "$authToken" )

tokenExpiration=$( /usr/bin/plutil \
-extract expires raw - <<< "$authToken" )

localTokenExpirationEpoch=$( TZ=GMT /bin/date -j \
-f "%Y-%m-%dT%T" "$tokenExpiration" \
+"%s" 2> /dev/null )

# Send the API request to get the computer ID
response=$(curl -s -X GET \
  -H "Authorization: Bearer $token" \
  -H "Accept: application/xml" \
  "$jamfProURL/JSSResource/computers/serialnumber/$COMPUTER_SERIAL")

# Extract the computer ID based on the serial number from the response using xmllint and sed
computer_id=$(echo "$response" | xmllint --xpath 'string(/computer/general/id)' - | sed 's/[^0-9]*//g')

# Print the computer ID
echo "Computer ID: $computer_id"

# Send API request to get the computer inventory details
response2=$(curl -s -X GET \
   -H "Authorization: Bearer $token" \
   -H "accept: application/json" \
   "$jamfProURL/api/v1/computers-inventory-detail/$computer_id")

# Extract the management ID from the response using jq
management_id=$(echo "$response2" | jq -r '.general.managementId')

# Print the management ID
echo "Management ID: $management_id"

# Send API request to get the LAPS username
laps_username_response=$(curl -s -X GET \
   -H "Authorization: Bearer $token" \
   -H "accept: application/json" \
   "$jamfProURL/api/v2/local-admin-password/$management_id/accounts")

# Extract the LAPS username from the response using jq
laps_username=$(echo "$laps_username_response" | jq -r '.results[0].username')

# Print the LAPS username
echo "LAPS Username: $laps_username"

# Send API request to get the LAPS password
laps_password_response=$(curl -s -X GET \
   -H "Authorization: Bearer $token" \
   -H "accept: application/json" \
   "$jamfProURL/api/v2/local-admin-password/$management_id/account/$laps_username/password")

# Extract the LAPS password from the response using jq
laps_password=$(echo "$laps_password_response" | jq -r '.password')

# Print the LAPS password
echo "LAPS Password: $laps_password"

# Expire auth token
/usr/bin/curl \
--header "Authorization: Bearer $token" \
--request POST \
--silent \
--url "$jamfProURL/api/v1/auth/invalidate-token"